[{"/Users/maymt/Desktop/tabla/try-tables/src/index.js":"1","/Users/maymt/Desktop/tabla/try-tables/src/reportWebVitals.js":"2","/Users/maymt/Desktop/tabla/try-tables/src/pages/App.js":"3","/Users/maymt/Desktop/tabla/try-tables/src/components/Navbar.js":"4"},{"size":517,"mtime":1606333624176,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1606254775950,"results":"7","hashOfConfig":"6"},{"size":9258,"mtime":1606834905762,"results":"8","hashOfConfig":"6"},{"size":1071,"mtime":1606766506535,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1tfv19r",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},"/Users/maymt/Desktop/tabla/try-tables/src/index.js",[],["22","23"],"/Users/maymt/Desktop/tabla/try-tables/src/reportWebVitals.js",[],["24","25"],"/Users/maymt/Desktop/tabla/try-tables/src/pages/App.js",["26","27","28","29","30"],"import React, { useState, useEffect } from 'react';\nimport { CardContent, Grid , Card, } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {FilterList, Receipt, Close} from '@material-ui/icons';\nimport axios from 'axios';\nimport MUIDataTable from \"mui-datatables\";\nimport Navbar from  '../components/Navbar';\n\n\nconst baseUrl=\"http://localhost:4000/tabla2\";\n\nconst columns = [\n  { name: 'cliente', label:  'Rut Razón Social', type: 'numeric', options: { filter: false, sort: false }},\n  { name: 'razon_social', label:  'Razón Social', options: { filter: true, sort: false }},\n  { name: 'guia_despacho', label:  'Guía Despacho', options: { filter: false, sort: true }},\n  { name: 'obra_oc', label:  'Obra', options: { filter: true, sort: true }},\n  { name: 'fecha', label:  'Fecha', type: 'date', options: { filter: false, sort: true }},\n  { name: 'pedido', label:  'Pedido', type:'numeric' , options: { filter: false, sort: true }},\n  { name: 'mes', label:  'Mes', type:'numeric' , options: { filter: true, sort: true, filterType: 'multiselect' }},\n  { name: 'producto', label:  'Producto', options: { filter: false, sort: false }},\n  { name: 'm3', label:  'Volumen', type: 'numeric', options: { filter: false, sort: true }},\n  { name: 'hora_solicitada_cliente_original', label:  'Hora Solicitada', options: { filter: false, sort: true }},\n  { name: 'hora_llegada_a_obra', label:  'Llegada Obra', options: { filter: false, sort: true }},\n  { name: 'puntualidad', label:  '¿Puntual?', options: { filter: true, sort: false, filterType: 'checkbox' }},\n  { name: 'atraso', label:  'Minutos Impuntualidad', type:'time' , options: { filter: false, sort: true }},\n  { name: 'estimada', label:  'Estadía Asignada', options: { filter: false, sort: false }},\n  { name: 'hora_vuelta_a_planta', label:  'Salida Obra', options: { filter: false, sort: false }},\n  { name: 'real', label:  'Estadía Real', options: { filter: false, sort: false }},\n  { name: 'adicionales', label:  'Minutos Adicionales', options: { filter: false, sort: false }},\n  { name: 'diferencia_minutos', label:  'Minutos Diferencia' , options: { filter: false, sort: true }},\n  { name: 'tramos', label:  'Tramos SE', type: 'numeric', options: { filter: false, sort: false }},\n  { name: 'monto', label:  'Monto (UF)' , type: 'numeric', options: { filter: false, sort: false }}\n ];\n\n\n const options = {\n  rowsPerPage: 10,\n  filterType: 'textField',\n  download: 'false',\n  print: 'false',\n  search: 'false',\n  fixedColumns: 2\n };\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: 'left',\n    background: 'white',\n    paddingBottom: '20px',\n    alignContent: 'center'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    width: 200,\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [sumas, setSumas] = useState([]);\n  const [rows, setRows] = useState([]);\n  const [obraSeleccionado, setObraSeleccionado]=useState({ //Datos que se ponen en los inputs\n    fecha_inicio: \"\",\n    fecha_fin: \"\",\n    obra_oc: \"\"\n  })\n\n  const handleChange=e=>{\n    const {name, value}=e.target;\n    setObraSeleccionado(prevState=>({\n      ...prevState,\n      [name]: value\n    }));\n  }\n\n  const peticionGet=async()=>{\n    await axios.get(baseUrl)\n    .then(response=>{\n     setData(response.data);\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n\n  const peticionGet1=async()=>{\n    await axios.get(baseUrl+\"/\"+obraSeleccionado.fecha_inicio+\"/\"+obraSeleccionado.fecha_fin+\"/\"+obraSeleccionado.obra_oc, obraSeleccionado)\n    .then(response=>{\n     setData(response.data);\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  const peticionSuma = async() => {\n    await axios.get(baseUrl+\"/\"+obraSeleccionado.fecha_inicio+\"/\"+obraSeleccionado.fecha_fin+\"/\"+obraSeleccionado.obra_oc+\"/9\", obraSeleccionado)\n    .then(response=>{\n      setSumas(response.data);\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  function createDatos () {\n    if(sumas[0].min_atraso.hours === undefined || sumas[0].min_atraso.hours === NaN){\n      var atraso_horas = 0;\n    } else{\n    var atraso_horas = sumas[0].min_atraso.hours;\n  }\n\n  if(sumas[0].min_adicionales.hours === undefined || sumas[0].min_adicionales.hours === NaN){\n    var adicionales_horas = 0;\n  } else{\n  var adicionales_horas = sumas[0].min_adicionales.hours;\n}\n\n    var atraso_minutos = sumas[0].min_atraso.minutes;\n    var adicionales_minutos = sumas[0].min_adicionales.minutes;\n\n    var atraso_ = atraso_horas * 60 + atraso_minutos;\n    var adicionales_ = adicionales_horas * 60 + adicionales_minutos;\n    var diferencia_ = 0;\n    var rango_ = 15;\n    var tramos_ = 0;\n    var monto_ = 0;\n\n    if (adicionales_ > atraso_ ) {\n      diferencia_ = adicionales_ - atraso_;\n      tramos_ = Math.floor(diferencia_ / rango_);\n      monto_ = 0.5 * tramos_;\n    } else {\n      diferencia_ = \"Minutos a favor\";\n    }\n\n    const rows = [ atraso_, adicionales_, diferencia_, tramos_, monto_ ];\n\n    console.log(rows);\n\n    setRows(rows);\n  }\n\n  useEffect(()=>{\n    peticionGet();\n  }, [])\n\n\n  return (\n    <div className={classes.root}>\n\n      <Grid item xs = {12}>\n        <Navbar/>\n      </Grid>\n\n    \n      <Card className = {classes.root}>\n        <CardContent className = {classes.root}>\n        <Card className = {classes.root}>\n        <CardContent className = {classes.root}>\n          <h3>Resumen</h3>\n          <Grid container>\n          <Grid item xs={12}>\n            <h3 align = \"left\">Obra: {obraSeleccionado.obra_oc}</h3>\n            <h4 align = \"left\">Impuntualidad Melón: {rows[0]} Minutos</h4>\n            <h4 align = \"left\">Sobrestadía: {rows[1]} Minutos</h4>\n            <h4 align = \"left\">Diferencia: {rows[2]}. ({rows[0] - rows[1]})Minutos</h4>\n            <h4 align = \"left\">Tramos de 15min: {rows[3]}</h4>\n            <h4 align = \"left\">Monto: {rows[4]} UF</h4>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              startIcon={<Receipt />}\n              onClick={()=> createDatos()}\n            >\n              Calcular\n            </Button>\n          </Grid>\n          </Grid>\n          </CardContent>\n      </Card>\n        </CardContent>\n      </Card>\n\n\n      <Card className={classes.root}>\n      <CardContent className = {classes.root}>\n      <Card className = {classes.root}>\n        <CardContent className = {classes.root}>\n        <h3 align = \"left\">Filtros</h3>\n        <Grid container spacing = {3}>\n\n          <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\n            <TextField className={classes.textField}\n            name=\"obra_oc\"\n            label=\"Obra: \"\n            onChange={handleChange}\n            value={obraSeleccionado&&obraSeleccionado.obra_oc} />\n          </Grid>\n\n          <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\n            <TextField\n              name=\"fecha_inicio\"\n              label=\"Desde: \"\n              type=\"date\"\n              defaultValue=\"2019-09-13\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={handleChange}\n              value={obraSeleccionado&&obraSeleccionado.fecha_inicio}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\n            <TextField\n              name=\"fecha_fin\"\n              label=\"Hasta: \"\n              type=\"date\"\n              defaultValue=\"\"\n              className={classes.textField}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              onChange={handleChange}\n              value={obraSeleccionado&&obraSeleccionado.fecha_fin}\n            />\n          </Grid>\n\n          <Grid item xs={12} sm={3} md={3} lg={3} xl={3}>\n            <Grid xs = {6} sm = {6}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                startIcon={<FilterList />}\n                onClick={()=> (peticionGet1(), peticionSuma())}\n              >\n                Filtrar\n              </Button>\n            </Grid>\n            \n            <Grid xs = {6} sm = {6}>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                startIcon={<Close />}\n                onClick={()=> peticionGet()}\n              >\n                Limpiar\n              </Button>\n            </Grid>\n           \n          </Grid>\n        </Grid>\n        </CardContent>\n        </Card>\n    </CardContent>\n    </Card>\n  \n      <Card className={classes.root}>\n      <CardContent>\n        <Grid item xs = {12}>\n          <MUIDataTable\n            title={\"Pedidos\"}\n            data={data}\n            columns={columns}\n            options={options}\n          />\n        </Grid>\n      </CardContent>\n    </Card>\n    </div>\n  );\n}\n\nexport default App;\n\n","/Users/maymt/Desktop/tabla/try-tables/src/components/Navbar.js",["31"],"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {AppBar, Toolbar, IconButton, Typography} from '@material-ui/core';\nimport Home from '@material-ui/icons/Home';\nimport logo from '../assets/img/logo-blanco.png';\n\nconst useStyles = makeStyles(()=>({\n\troot: {\n\t\tflexGrow: 1,\n\t\tfixed: 'top'\n\t},\n\thomeButton: {\n\t\tmarginRight: '20px'\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t\tfontWeight: 'bold'\n\t},\n\tborderRadius: '50%'\n}));\n\nfunction Navbar() {\n\tconst classes = useStyles();\n\treturn (\n\t\t<div className = {classes.root}>\n\t\t\t<AppBar position = \"static\" style={{ background: '#006C90'}}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton edge = \"start\" className = {\"classes.homeButton\"} color = \"inherit\" href = \"http://localhost:3000/\">\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant=\"h5\" className={classes.title}>\n\t\t\t\t\t\tMVP Sobrestadía\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<IconButton color=\"inherit\">\n\t\t\t\t\t\t<img src={logo} width=\"100px\" height=\"40px\" className={classes.imagen}/>\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n}\n\nexport default Navbar;\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"32","replacedBy":"36"},{"ruleId":"34","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":113,"column":51,"nodeType":"40","messageId":"41","endLine":113,"endColumn":84},{"ruleId":"42","severity":1,"message":"43","line":116,"column":9,"nodeType":"44","messageId":"45","endLine":116,"endColumn":21},{"ruleId":"38","severity":1,"message":"39","line":119,"column":54,"nodeType":"40","messageId":"41","endLine":119,"endColumn":92},{"ruleId":"42","severity":1,"message":"46","line":122,"column":7,"nodeType":"44","messageId":"45","endLine":122,"endColumn":24},{"ruleId":"47","severity":1,"message":"48","line":248,"column":46,"nodeType":"49","messageId":"50","endLine":248,"endColumn":47},{"ruleId":"51","severity":1,"message":"52","line":35,"column":7,"nodeType":"53","endLine":35,"endColumn":79},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],["54"],["55"],"use-isnan","Use the isNaN function to compare with NaN.","BinaryExpression","comparisonWithNaN","no-redeclare","'atraso_horas' is already defined.","Identifier","redeclared","'adicionales_horas' is already defined.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]