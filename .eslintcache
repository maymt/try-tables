[{"/Users/maymt/Desktop/tabla/try-tables/src/pages/App.js":"1","/Users/maymt/Desktop/tabla/try-tables/src/reportWebVitals.js":"2","/Users/maymt/Desktop/tabla/try-tables/src/components/Navbar.js":"3","/Users/maymt/Desktop/tabla/try-tables/src/index.js":"4"},{"size":13983,"mtime":1607361001448,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1606254775950,"results":"7","hashOfConfig":"6"},{"size":1071,"mtime":1606766506535,"results":"8","hashOfConfig":"6"},{"size":517,"mtime":1606333624176,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"1tfv19r",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/maymt/Desktop/tabla/try-tables/src/pages/App.js",["20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36"],"import React, { useState, useEffect } from 'react';\nimport { CardContent, Grid , Card, Typography} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {FilterList, Receipt, Close} from '@material-ui/icons';\nimport axios from 'axios';\nimport MUIDataTable from \"mui-datatables\";\nimport Navbar from  '../components/Navbar';\nimport moment from 'moment';\n\n\n\nconst baseUrl=\"http://localhost:3001/\";\n\n\nconst columnas = [\n  { name: 'Fecha', label: 'Fecha', options: { filter: false, sort: false } },\n  { name: 'cliente', label: 'Rut', options: { filter: false, sort: false } }, \n  { name: 'cliente_name', label: 'Razón Social', options: { filter: false, sort: false } }, \n  { name: 'obra', label: 'Cod. Obra', options: { filter: false, sort: false } }, \n  { name: 'obra_name', label: 'Nombre Obra', options: { filter: false, sort: false } }, \n  { name: 'pedido', label: 'Pedida', options: { filter: false, sort: false } }, \n  { name: 'tren_pedido', label: 'Tren Pedido', options: { filter: false, sort: false } }, \n  { name: 'posicion_en_tren', label: 'Posición Tren', options: { filter: false, sort: false } }, \n  { name: 'Guia_despacho', label: 'Guía Despacho', options: { filter: false, sort: false } }, \n  { name: 'planta', label: 'Planta', options: { filter: false, sort: true } }, \n  { name: 'producto_codigo', label: 'Cod. Producto', options: { filter: false, sort: false } }, \n  { name: 'producto', label: 'Producto', options: { filter: false, sort: false } }, \n  { name: 'm3', label: 'Volumen', options: { filter: true, sort: false, filterType: 'multiselect' } }, \n  { name: 'camion', label: 'Camión', options: { filter: false, sort: false } }, \n  { name: 'contratista', label: 'Contratista', options: { filter: false, sort: false }}, \n  { name: 'hora_solicitada_cliente_original', label: 'Hora Solicitada', options: { filter: false, sort: false } }, \n  { name: 'hora_solicitada_cliente_primer_despacho_de_tren', label: 'Hora 1er Tren', options: { filter: false, sort: false } }, \n  { name: 'hora_solicitada_cliente_corregida', label: 'Hora Corregida', options: { filter: false, sort: false } }, \n  { name: 'espaciamiento', label: 'Espaciamiento', options: { filter: false, sort: false } }, \n  { name: 'tiempo_viaje_vuelta_proyectado', label: 'Tiempo Ida', options: { filter: false, sort: false } }, \n  { name: 'tiempo_ida_vuelta_proyectado', label: 'Tiempo Vuelta', options: { filter: false, sort: false } }, \n  { name: 'hora_tiquete', label: 'Hora Tiquete', options: { filter: false, sort: false } }, \n  { name: 'hora_de_carga', label: 'Hora Inicio Carga', options: { filter: false, sort: false } }, \n  { name: 'hora_fin_de_carga', label: 'Hora Fin Carga', options: { filter: false, sort: false } }, \n  { name: 'hora_salida_de_planta', label: 'Hora Salida Planta', options: { filter: false, sort: false } }, \n  { name: 'hora_llegada_a_obra', label: 'Hora Llegada Obra', options: { filter: false, sort: false } }, \n  { name: 'hora_inicio_descarga', label: 'Hora Inicio Descarga', options: { filter: false, sort: false } }, \n  { name: 'hora_salida_a_planta', label: ' Hora Salida Obra', options: { filter: false, sort: false } },\n  { name: 'hora_llegada_a_planta', label: 'Hora Llegada Planta', options: { filter: false, sort: false } },\n  { name: 'direccion', label: 'Dirección', options: { filter: false, sort: false } }, \n  { name: 'cuadrante', label: 'Cuadrante', options: { filter: false, sort: false } }, \n  { name: 'anillo', label: 'Anillo', options: { filter: false, sort: false } }, \n  { name: 'costo_produccion', label: 'Costo Producción', options: { filter: false, sort: false } }, \n  { name: 'codigo_remosion_pedido', label: 'Cod. Remosión Pedido', options: { filter: true, sort: false, filterType: 'multiselect' } },\n  { name: 'codigo_remosion_tren', label: 'Cod. Remosión Tren', options: { filter: true, sort: false, filterType: 'multiselect' } }, \n  { name: 'codigo_remosion_tren', label: 'Cod. Remosión Tren', options: { filter: true, sort: false, filterType: 'multiselect' } }, \n  { name: 'codigo_remosion_linea', label: 'Cod. Remosión Línea', options: { filter: true, sort: false, filterType: 'multiselect' } }, \n  { name: 'codigo_remosion_fuera_plazo', label: 'Cod. Remosión FP', options: { filter: true, sort: false, filterType: 'multiselect' } }, \n  { name: 'm3_a_botadero', label: 'M3 Botadero', options: { filter: true, sort: false, filterType: 'multiselect' } }, \n  { name: 'm3_a_redestino', label: 'M3 Redestino', options: { filter: true, sort: false, filterType: 'multiselect' } }\n];\n\n\n const options = {\n  rowsPerPage: 10,\n  filterType: 'textField',\n  download: 'false',\n  print: 'false',\n  search: 'false',\n  fixedColumns: 2\n };\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    textAlign: 'left',\n    background: 'white',\n    paddingBottom: '20px',\n    alignContent: 'center'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    width: 200,\n  },\n  button:{\n    fontSize: 14,\n    textAlign: 'center',\n    fontWeight: 'bold',\n    margin: '20px'\n  },\n  card:{\n    textAlign: 'center',\n    padding: '10px',\n    margin: '20px'\n  },\n  texto:{\n      fontSize: 16,\n      textAlign: 'left',\n      fontWeight: 'medium'\n  },\n  titulo:{\n      fontWeight: 'bold',\n      fontSize: 22,\n      marginBottom: '10px'\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [sumas, setSumas] = useState([]);\n  const [rows, setRows] = useState([]);\n  const [obraSeleccionado, setObraSeleccionado]=useState({ //Datos que se ponen en los inputs\n    fecha_inicio: \"\",\n    fecha_fin: \"\",\n    obra_oc: \"\"\n  })\n\n  const handleChange=e=>{\n    const {name, value}=e.target;\n    setObraSeleccionado(prevState=>({\n      ...prevState,\n      [name]: value\n    }));\n  }\n\n  const peticionGet=async()=>{\n    var hoy = moment().get('year')+\"-\"+(moment().get('month') + 1)+\"-\"+(moment().get('day') - 1);\n    hoy = moment(hoy, 'YYYY-MM-dd');\n    hoy = hoy._i;\n\n    var inicio = moment().subtract(1, 'months');\n    var inicio = moment(inicio).get('year')+\"-\"+moment(inicio).get('month')+\"-\"+moment(inicio).get('day');\n    inicio = moment(inicio, 'YYYY-MM-dd');\n    inicio = inicio._i;\n    \n    await axios.get(baseUrl+\"datos\")\n    // await axios.get(baseUrl+\"/\"+inicio+\"/\"+hoy)\n    .then(response=>{\n      // console.log(response.data)\n      setData(response.data);\n      console.log(data);\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n\n  function createDatos () {\n    if(sumas[0].min_atraso.hours === undefined || sumas[0].min_atraso.hours === NaN){\n      var atraso_horas = 0;\n    } else{\n    var atraso_horas = sumas[0].min_atraso.hours;\n  }\n\n  if(sumas[0].min_adicionales.hours === undefined || sumas[0].min_adicionales.hours === NaN){\n    var adicionales_horas = 0;\n  } else{\n  var adicionales_horas = sumas[0].min_adicionales.hours;\n}\n\n    var atraso_minutos = sumas[0].min_atraso.minutes;\n    var adicionales_minutos = sumas[0].min_adicionales.minutes;\n\n    var atraso_ = atraso_horas * 60 + atraso_minutos;\n    var adicionales_ = adicionales_horas * 60 + adicionales_minutos;\n    var diferencia_ = 0;\n    var rango_ = 15;\n    var tramos_ = 0;\n    var monto_ = 0;\n\n    if (adicionales_ > atraso_ ) {\n      diferencia_ = adicionales_ - atraso_;\n      tramos_ = Math.floor(diferencia_ / rango_);\n      monto_ = 0.5 * tramos_;\n    } else {\n      diferencia_ = \"Minutos a favor\";\n    }\n\n    const rows = [ atraso_, adicionales_, diferencia_, tramos_, monto_ ];\n\n    console.log(rows);\n\n    setRows(rows);\n  }\n\n  // function setearDatos (data) {\n  //   let x,y;\n  //   //recorriendo la matriz\n  //   for (x in data) {\n  //     for (y in data[x]){\n  //       console.log(data[x][17]);\n  //       }\n  //     }\n  //   }\n  //   setData(data);\n  // }\n\n  function filtrarDatos(data, fecha_inicio, fecha_fin, obra) {\n    let x;\n    \n    const rows = [];\n\n    var puntual = 0;\n    var atraso = 0;\n    var estadia_esperada = 0;\n    var estadia_real = 0;\n    var min_adicionales = 0;\n    var min_diferencia = 0;\n    var tramos = 0;\n    var monto = 0;\n\n    var i = 0;\n\n    for (x in data){\n      var solicitada = data[x][17]; //hora solicitada corregida.\n      var llegada = data[x][25]; //hora de llegada a la obra.\n      var salida = data[x][27]; // hora de salida de la obra.\n      var estadia_esperada = 15 + data[x][12] * 6 + 10; //estadia esperada calculada en base al volumen pedido + los 15 minutos de posicionamiento.\n\n      if (llegada !== null && salida !== null){\n        solicitada = parseInt(solicitada.substring(0,2)) * 3600 + parseInt(solicitada.substring(3,6)) * 60 + parseInt(solicitada.substring(7,8));\n        llegada = parseInt(llegada.substring(0,2)) * 3600 + parseInt(llegada.substring(3,6)) * 60 + parseInt(llegada.substring(7,8));\n        salida = parseInt(salida.substring(0,2)) * 3600 + parseInt(salida.substring(3,6)) * 60 + parseInt(salida.substring(7,8));\n\n        var estadia_real = (salida - llegada) / 60;\n\n                \n      if (Math.abs(llegada - solicitada) > 1800) {\n        atraso =  Math.abs((llegada - solicitada) - 1800 ) / 60 ; //1800 s = 30 minutos rango puntualidad\n        atraso = Math.ceil(atraso);\n        puntual = \"No\";\n      } else{\n        atraso = 0;\n        puntual = \"Si\";\n      };\n\n      console.log(puntual, atraso);\n      \n\n      if (data[x][3].includes(obra) && data[x][0] >= fecha_inicio && data[x][0] <= fecha_fin) {\n        rows.push(data[x]); \n      }\n      }\n    setData(rows);\n  }\n}\n\n  \n\n\n  useEffect(()=>{\n    peticionGet();\n  }, [])\n\n\n  return (\n    <div className={classes.root}>\n\n      <Grid item xs = {12}>\n        <Navbar/>\n      </Grid>\n\n\n      <Grid container spacing = {0}>\n        \n        <Grid item xs={12} sm={5} md={5} lg={5} xl={5}>\n          <Card className={classes.card}>\n            <CardContent>\n\n              <Typography className={classes.titulo}>\n                Resumen\n              </Typography>\n\n              <br></br>\n              \n              <Typography className={classes.texto}>\n                Obra:               {obraSeleccionado.obra_oc}\n              </Typography>\n\n              <Typography className={classes.texto}>\n                Impuntualidad Melón: {rows[0]} Minutos\n              </Typography>\n\n              <Typography className={classes.texto}>\n                Sobrestadía: {rows[1]} Minutos\n              </Typography>\n\n              <Typography className={classes.texto}>\n                Diferencia: {rows[2]}. ({rows[0] - rows[1]})Minutos\n              </Typography>\n\n              <Typography className={classes.texto}>\n                Tramos de 15min: {rows[3]}\n              </Typography>\n\n              <Typography className={classes.texto}>\n                Monto: {rows[4]} UF\n              </Typography>\n              \n              <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.button}\n                  startIcon={<Receipt />}\n                  onClick={()=> createDatos()}\n                  >\n                  Calcular\n              </Button>\n\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} sm={7} md={7} lg={7} xl={7}>\n          <Card className={classes.card}>\n            <CardContent>\n\n              <Typography className={classes.titulo}>\n                Filtros\n              </Typography>\n              \n            <br></br>\n            <br></br>\n            <br></br>\n\n            <Grid item xs={12}>\n              <TextField className={classes.textField}\n                name=\"obra_oc\"\n                label=\"Obra: \"\n                onChange={handleChange}\n                value={obraSeleccionado&&obraSeleccionado.obra_oc}\n              />\n\n              <TextField\n                name=\"fecha_inicio\"\n                label=\"Desde: \"\n                type=\"date\"\n                defaultValue=\"2019-09-13\"\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={handleChange}\n                value={obraSeleccionado&&obraSeleccionado.fecha_inicio}\n              />\n\n              <TextField\n                name=\"fecha_fin\"\n                label=\"Hasta: \"\n                type=\"date\"\n                defaultValue=\"\"\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={handleChange}\n                value={obraSeleccionado&&obraSeleccionado.fecha_fin}\n              />\n            </Grid>\n\n            <br></br>\n            <br></br>\n            <br></br>\n\n\n            <Grid item xs={12}>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.button}\n                startIcon={<FilterList />}\n                onClick={()=> filtrarDatos(data, obraSeleccionado.fecha_inicio, obraSeleccionado.fecha_fin, obraSeleccionado.obra_oc)}\n              >\n                Filtrar\n              </Button>\n\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                startIcon={<Close />}\n                onClick={()=> peticionGet()}\n              >\n                Limpiar\n              </Button>\n\n            </Grid>\n\n            </CardContent>\n          </Card>\n        </Grid>\n        \n      </Grid>\n\n      <Grid item xs = {12}>\n        <Card className={classes.root}>\n          <CardContent>\n            <MUIDataTable\n              title={\"Pedidos\"}\n              data={data}\n              columns={columnas}\n              options={options}\n            />\n          </CardContent>\n        </Card>\n      </Grid>\n      \n    </div>\n  );\n}\n\nexport default App;\n\n","/Users/maymt/Desktop/tabla/try-tables/src/reportWebVitals.js",[],"/Users/maymt/Desktop/tabla/try-tables/src/components/Navbar.js",["37"],"import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {AppBar, Toolbar, IconButton, Typography} from '@material-ui/core';\nimport Home from '@material-ui/icons/Home';\nimport logo from '../assets/img/logo-blanco.png';\n\nconst useStyles = makeStyles(()=>({\n\troot: {\n\t\tflexGrow: 1,\n\t\tfixed: 'top'\n\t},\n\thomeButton: {\n\t\tmarginRight: '20px'\n\t},\n\ttitle: {\n\t\tflexGrow: 1,\n\t\tfontWeight: 'bold'\n\t},\n\tborderRadius: '50%'\n}));\n\nfunction Navbar() {\n\tconst classes = useStyles();\n\treturn (\n\t\t<div className = {classes.root}>\n\t\t\t<AppBar position = \"static\" style={{ background: '#006C90'}}>\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<IconButton edge = \"start\" className = {\"classes.homeButton\"} color = \"inherit\" href = \"http://localhost:3000/\">\n\t\t\t\t\t\t<Home />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t<Typography variant=\"h5\" className={classes.title}>\n\t\t\t\t\t\tMVP Sobrestadía\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<IconButton color=\"inherit\">\n\t\t\t\t\t\t<img src={logo} width=\"100px\" height=\"40px\" className={classes.imagen}/>\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n}\n\nexport default Navbar;\n","/Users/maymt/Desktop/tabla/try-tables/src/index.js",[],{"ruleId":"38","severity":1,"message":"39","line":112,"column":17,"nodeType":"40","messageId":"41","endLine":112,"endColumn":25},{"ruleId":"38","severity":1,"message":"42","line":131,"column":11,"nodeType":"40","messageId":"41","endLine":131,"endColumn":14},{"ruleId":"43","severity":1,"message":"44","line":134,"column":9,"nodeType":"40","messageId":"45","endLine":134,"endColumn":15},{"ruleId":"46","severity":1,"message":"47","line":151,"column":51,"nodeType":"48","messageId":"49","endLine":151,"endColumn":84},{"ruleId":"43","severity":1,"message":"50","line":154,"column":9,"nodeType":"40","messageId":"45","endLine":154,"endColumn":21},{"ruleId":"46","severity":1,"message":"47","line":157,"column":54,"nodeType":"48","messageId":"49","endLine":157,"endColumn":92},{"ruleId":"43","severity":1,"message":"51","line":160,"column":7,"nodeType":"40","messageId":"45","endLine":160,"endColumn":24},{"ruleId":"38","severity":1,"message":"52","line":209,"column":9,"nodeType":"40","messageId":"41","endLine":209,"endColumn":24},{"ruleId":"38","severity":1,"message":"53","line":210,"column":9,"nodeType":"40","messageId":"41","endLine":210,"endColumn":23},{"ruleId":"38","severity":1,"message":"54","line":211,"column":9,"nodeType":"40","messageId":"41","endLine":211,"endColumn":15},{"ruleId":"38","severity":1,"message":"55","line":212,"column":9,"nodeType":"40","messageId":"41","endLine":212,"endColumn":14},{"ruleId":"38","severity":1,"message":"56","line":214,"column":9,"nodeType":"40","messageId":"41","endLine":214,"endColumn":10},{"ruleId":"43","severity":1,"message":"57","line":220,"column":11,"nodeType":"40","messageId":"45","endLine":220,"endColumn":27},{"ruleId":"38","severity":1,"message":"58","line":220,"column":11,"nodeType":"40","messageId":"41","endLine":220,"endColumn":27},{"ruleId":"43","severity":1,"message":"59","line":227,"column":13,"nodeType":"40","messageId":"45","endLine":227,"endColumn":25},{"ruleId":"38","severity":1,"message":"60","line":227,"column":13,"nodeType":"40","messageId":"41","endLine":227,"endColumn":25},{"ruleId":"61","severity":1,"message":"62","line":255,"column":6,"nodeType":"63","endLine":255,"endColumn":8,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":35,"column":7,"nodeType":"67","endLine":35,"endColumn":79},"no-unused-vars","'setSumas' is assigned a value but never used.","Identifier","unusedVar","'hoy' is assigned a value but never used.","no-redeclare","'inicio' is already defined.","redeclared","use-isnan","Use the isNaN function to compare with NaN.","BinaryExpression","comparisonWithNaN","'atraso_horas' is already defined.","'adicionales_horas' is already defined.","'min_adicionales' is assigned a value but never used.","'min_diferencia' is assigned a value but never used.","'tramos' is assigned a value but never used.","'monto' is assigned a value but never used.","'i' is assigned a value but never used.","'estadia_esperada' is already defined.","'estadia_esperada' is assigned a value but never used.","'estadia_real' is already defined.","'estadia_real' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'peticionGet'. Either include it or remove the dependency array.","ArrayExpression",["68"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"69","fix":"70"},"Update the dependencies array to be: [peticionGet]",{"range":"71","text":"72"},[9693,9695],"[peticionGet]"]